import resolve from '@rollup/plugin-node-resolve';
import commonjs from '@rollup/plugin-commonjs';
import json from '@rollup/plugin-json'; // Import the json plugin
import dts from 'rollup-plugin-dts';
import fs from 'fs';

const pkg = JSON.parse(fs.readFileSync('./package.json', 'utf-8'));

export default [
  {
    input: 'dist/index.js',
    output: [
      {
        file: pkg.main,
        format: "commonjs",
        sourcemap: true,
      },
    ],
    plugins: [
      resolve({
        resolveOnly: ["./src/**"],
      }),
      commonjs(),
      json() // Add the json plugin here
    ],
  },
  {
    // Separate configuration for generating the .d.ts file
    input: 'dist/index.d.ts', // Input is the .d.ts file generated by TypeScript
    output: [{ file: pkg.types, format: 'es' }],
    plugins: [dts()],
    // external: Object.keys(pkg.peerDependencies || {}).concat(Object.keys(pkg.dependencies || {})),
  }
];
